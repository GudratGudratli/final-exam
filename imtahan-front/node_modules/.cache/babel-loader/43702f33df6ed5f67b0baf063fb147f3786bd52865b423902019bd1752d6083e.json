{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\admin\\\\Desktop\\\\imtahan\\\\imtahan-front\\\\src\\\\components\\\\pages\\\\add\\\\index.js\";\nimport React from 'react';\nimport { Formik, Field, Form, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\nimport Footer from '../../layout/footer';\nimport Navbar from '../../layout/navbar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Add = () => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: {\n        firstName: '',\n        lastName: '',\n        email: ''\n      },\n      validationSchema: Yup.object({\n        firstName: Yup.string().max(15, 'Must be 15 characters or less').required('Required'),\n        lastName: Yup.string().max(20, 'Must be 20 characters or less').required('Required'),\n        email: Yup.string().email('Invalid email address').required('Required')\n      }),\n      onSubmit: (values, _ref) => {\n        let {\n          setSubmitting\n        } = _ref;\n        setTimeout(() => {\n          alert(JSON.stringify(values, null, 2));\n          setSubmitting(false);\n        }, 400);\n      },\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"firstName\",\n          children: \"First Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          name: \"firstName\",\n          type: \"text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n          name: \"firstName\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"lastName\",\n          children: \"Last Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          name: \"lastName\",\n          type: \"text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n          name: \"lastName\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"Email Address\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          name: \"email\",\n          type: \"email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n          name: \"email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n};\n_c = Add;\nexport default Add;\nvar _c;\n$RefreshReg$(_c, \"Add\");","map":{"version":3,"names":["React","Formik","Field","Form","ErrorMessage","Yup","Footer","Navbar","Add","firstName","lastName","email","object","string","max","required","values","setSubmitting","setTimeout","alert","JSON","stringify"],"sources":["C:/Users/admin/Desktop/imtahan/imtahan-front/src/components/pages/add/index.js"],"sourcesContent":["import React from 'react';\r\nimport { Formik, Field, Form, ErrorMessage } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport Footer from '../../layout/footer';\r\nimport Navbar from '../../layout/navbar';\r\n\r\nconst Add = () => {\r\n  return (\r\n    <>\r\n    <Navbar/>\r\n    <div >\r\n\r\n    </div>\r\n    <Formik\r\n      initialValues={{ firstName: '', lastName: '', email: '' }}\r\n      validationSchema={Yup.object({\r\n        firstName: Yup.string()\r\n          .max(15, 'Must be 15 characters or less')\r\n          .required('Required'),\r\n        lastName: Yup.string()\r\n          .max(20, 'Must be 20 characters or less')\r\n          .required('Required'),\r\n        email: Yup.string().email('Invalid email address').required('Required'),\r\n      })}\r\n      onSubmit={(values, { setSubmitting }) => {\r\n        setTimeout(() => {\r\n          alert(JSON.stringify(values, null, 2));\r\n          setSubmitting(false);\r\n        }, 400);\r\n      }}\r\n    >\r\n      <Form>\r\n        <label htmlFor=\"firstName\">First Name</label>\r\n        <Field name=\"firstName\" type=\"text\" />\r\n        <ErrorMessage name=\"firstName\" />\r\n\r\n        <label htmlFor=\"lastName\">Last Name</label>\r\n        <Field name=\"lastName\" type=\"text\" />\r\n        <ErrorMessage name=\"lastName\" />\r\n\r\n        <label htmlFor=\"email\">Email Address</label>\r\n        <Field name=\"email\" type=\"email\" />\r\n        <ErrorMessage name=\"email\" />\r\n\r\n        <button type=\"submit\">Submit</button>\r\n      </Form>\r\n    </Formik>\r\n\r\n    <Footer/>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Add"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,MAAM,EAAEC,KAAK,EAAEC,IAAI,EAAEC,YAAY,QAAQ,QAAQ;AAC1D,OAAO,KAAKC,GAAG,MAAM,KAAK;AAC1B,OAAOC,MAAM,MAAM,qBAAqB;AACxC,OAAOC,MAAM,MAAM,qBAAqB;AAAC;AAAA;AAEzC,MAAMC,GAAG,GAAG,MAAM;EAChB,oBACE;IAAA,wBACA,QAAC,MAAM;MAAA;MAAA;MAAA;IAAA,QAAE,eACT;MAAA;MAAA;MAAA;IAAA,QAEM,eACN,QAAC,MAAM;MACL,aAAa,EAAE;QAAEC,SAAS,EAAE,EAAE;QAAEC,QAAQ,EAAE,EAAE;QAAEC,KAAK,EAAE;MAAG,CAAE;MAC1D,gBAAgB,EAAEN,GAAG,CAACO,MAAM,CAAC;QAC3BH,SAAS,EAAEJ,GAAG,CAACQ,MAAM,EAAE,CACpBC,GAAG,CAAC,EAAE,EAAE,+BAA+B,CAAC,CACxCC,QAAQ,CAAC,UAAU,CAAC;QACvBL,QAAQ,EAAEL,GAAG,CAACQ,MAAM,EAAE,CACnBC,GAAG,CAAC,EAAE,EAAE,+BAA+B,CAAC,CACxCC,QAAQ,CAAC,UAAU,CAAC;QACvBJ,KAAK,EAAEN,GAAG,CAACQ,MAAM,EAAE,CAACF,KAAK,CAAC,uBAAuB,CAAC,CAACI,QAAQ,CAAC,UAAU;MACxE,CAAC,CAAE;MACH,QAAQ,EAAE,CAACC,MAAM,WAAwB;QAAA,IAAtB;UAAEC;QAAc,CAAC;QAClCC,UAAU,CAAC,MAAM;UACfC,KAAK,CAACC,IAAI,CAACC,SAAS,CAACL,MAAM,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC;UACtCC,aAAa,CAAC,KAAK,CAAC;QACtB,CAAC,EAAE,GAAG,CAAC;MACT,CAAE;MAAA,uBAEF,QAAC,IAAI;QAAA,wBACH;UAAO,OAAO,EAAC,WAAW;UAAA,UAAC;QAAU;UAAA;UAAA;UAAA;QAAA,QAAQ,eAC7C,QAAC,KAAK;UAAC,IAAI,EAAC,WAAW;UAAC,IAAI,EAAC;QAAM;UAAA;UAAA;UAAA;QAAA,QAAG,eACtC,QAAC,YAAY;UAAC,IAAI,EAAC;QAAW;UAAA;UAAA;UAAA;QAAA,QAAG,eAEjC;UAAO,OAAO,EAAC,UAAU;UAAA,UAAC;QAAS;UAAA;UAAA;UAAA;QAAA,QAAQ,eAC3C,QAAC,KAAK;UAAC,IAAI,EAAC,UAAU;UAAC,IAAI,EAAC;QAAM;UAAA;UAAA;UAAA;QAAA,QAAG,eACrC,QAAC,YAAY;UAAC,IAAI,EAAC;QAAU;UAAA;UAAA;UAAA;QAAA,QAAG,eAEhC;UAAO,OAAO,EAAC,OAAO;UAAA,UAAC;QAAa;UAAA;UAAA;UAAA;QAAA,QAAQ,eAC5C,QAAC,KAAK;UAAC,IAAI,EAAC,OAAO;UAAC,IAAI,EAAC;QAAO;UAAA;UAAA;UAAA;QAAA,QAAG,eACnC,QAAC,YAAY;UAAC,IAAI,EAAC;QAAO;UAAA;UAAA;UAAA;QAAA,QAAG,eAE7B;UAAQ,IAAI,EAAC,QAAQ;UAAA,UAAC;QAAM;UAAA;UAAA;UAAA;QAAA,QAAS;MAAA;QAAA;QAAA;QAAA;MAAA;IAChC;MAAA;MAAA;MAAA;IAAA,QACA,eAET,QAAC,MAAM;MAAA;MAAA;MAAA;IAAA,QAAE;EAAA,gBACN;AAEP,CAAC;AAAC,KA7CIT,GAAG;AA+CT,eAAeA,GAAG;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}